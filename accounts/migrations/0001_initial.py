# Generated by Django 3.0.4 on 2020-11-29 18:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_superadmin', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoreLevelPlans',
            fields=[
                ('core_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=500, null=True)),
                ('joining_fee', models.FloatField(default=0.0, null=True)),
                ('plan_image', models.ImageField(blank=True, null=True, upload_to='plan/image/')),
                ('show_plan_form', models.BooleanField(default=False)),
                ('plan_description', models.TextField(blank=True, null=True)),
                ('level1_percentage', models.FloatField(blank=True, default=0.0, help_text='First core level', null=True)),
                ('level2_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level3_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level4_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level5_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level6_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level7_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level8_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level9_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level10_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level11_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level12_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level13_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level14_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('level15_percentage', models.FloatField(blank=True, default=0.0, null=True)),
                ('creator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.Admin')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('profile_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=400, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile/pics')),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffPrivillage',
            fields=[
                ('staff_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_setting', models.BooleanField(default=False)),
                ('user_view', models.BooleanField(default=False)),
                ('user_management', models.BooleanField(default=False)),
                ('wallet_management', models.BooleanField(default=False)),
                ('epin_management', models.BooleanField(default=False)),
                ('earning_management', models.BooleanField(default=False)),
                ('manage_product', models.BooleanField(default=False)),
                ('view_orders', models.BooleanField(default=False)),
                ('manage_brand', models.BooleanField(default=False)),
                ('manage_report', models.BooleanField(default=False)),
                ('manage_expense', models.BooleanField(default=False)),
                ('manage_support', models.BooleanField(default=False)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('rank_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rank_name', models.CharField(max_length=500)),
                ('based_on', models.CharField(choices=[('maint', 'Main Target'), ('downt', 'Downline Target')], max_length=5)),
                ('count_based_on', models.CharField(choices=[('pvval', 'Pv Value'), ('memcnt', 'Members Count')], max_length=6)),
                ('duration', models.BigIntegerField(blank=True, default=0, null=True)),
                ('downline_value', models.BigIntegerField(blank=True, null=True)),
                ('direct_referrals', models.BigIntegerField(blank=True, null=True)),
                ('level_no', models.IntegerField(blank=True, null=True)),
                ('total_member_on_level', models.BigIntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.CoreLevelPlans')),
            ],
        ),
        migrations.CreateModel(
            name='Affilate',
            fields=[
                ('affilate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('affilate_rank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Rank')),
                ('user', models.OneToOneField(on_delete=models.Model, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
